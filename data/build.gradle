apply plugin: 'java'

sourceCompatibility = 1.7
targetCompatibility = 1.7

test {
    testLogging {
        events "skipped", "failed"

        afterSuite { desc, result ->
            if (!desc.parent) { // will match the outermost suite
                def output = "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
                def startItem = '|  ', endItem = '  |'
                def repeatLength = startItem.length() + output.length() + endItem.length()
                println('\n' + ('-' * repeatLength) + '\n' + startItem + output + endItem + '\n' + ('-' * repeatLength))
            }
        }
    }
}

dependencies {
    // Retrofit 2
    compile 'com.squareup.retrofit2:retrofit:2.0.1'
    compile "com.squareup.retrofit2:converter-gson:2.0.1"
    compile "com.squareup.retrofit2:adapter-rxjava:2.0.1"

    // OkHttp Logging Interceptor
    compile 'com.squareup.okhttp3:logging-interceptor:3.2.0'

    // Arrow (subset of Guava)
    compile 'com.fernandocejas:arrow:1.0.0'

    // AutoValue
    compileOnly 'com.ryanharter.auto.value:auto-value-gson:0.2.5'
    compileOnly 'com.google.auto.value:auto-value:1.2'

    // Dagger 2
    compile 'com.google.dagger:dagger:2.0'
    compileOnly 'com.google.dagger:dagger-compiler:2.0.2'

    testCompile 'junit:junit:4.12'

    // Mockito
    testCompile "org.mockito:mockito-core:1.10.19"

    // PowerMock
    testCompile 'org.powermock:powermock-mockito-release-full:1.6.3'
}